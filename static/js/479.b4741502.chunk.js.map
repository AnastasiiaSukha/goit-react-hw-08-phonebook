{"version":3,"file":"static/js/479.b4741502.chunk.js","mappings":"qQAGaA,GAASC,EAAAA,EAAAA,IAAO,SAAPA,CAAH,woCAkENC,EAAgBD,EAAAA,GAAAA,IAAH,8DAIbE,GAAUF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,qlBAMT,qBAAGI,MAAkBC,MAAMC,UAazBC,GAAWP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,0eAKR,qBAAGI,MAAkBK,MAAM,MACrB,qBAAGL,MAAkBK,MAAM,MAC3B,qBAAGL,MAAkBM,MAAMC,UAcjC,qBAAGP,MAAkBQ,OAAOC,SAQ5BC,GAAWd,EAAAA,EAAAA,IAAO,MAAPA,CAAH,2GACV,qBAAGI,MAAkBQ,OAAOG,UAEtB,qBAAGX,MAAkBK,MAAM,MACzB,qBAAGL,MAAkBK,MAAM,MAGjCO,GAAOhB,EAAAA,EAAAA,IAAO,KAAPA,CAAH,oEACF,qBAAGI,MAAkBa,UAAUC,K,SCpH1CC,EAAcC,EAAAA,KAAaC,MAAM,CACnCC,KAAMF,EAAAA,KAAaG,SAAS,oBAC5BC,MAAOJ,EAAAA,KAAaI,QACpBC,SAAUL,EAAAA,GACA,uBACPM,IAAI,EAAG,qDACPH,SAAS,0BAGC,SAASI,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAQjB,OACE,SAAC,KAAD,CACEC,cAAe,CAAER,KAAM,GAAIE,MAAO,GAAIC,SAAU,IAChDM,SATiB,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAC7BC,QAAQC,IAAIH,GACZJ,EAASQ,EAAAA,GAAAA,SAAwBJ,IACjCC,KAOEI,iBAAkBlB,EAHpB,UAKE,SAAClB,EAAD,WACA,UAACC,EAAD,YACE,0BACE,SAACc,EAAD,wBAEF,SAACT,EAAD,CACE+B,KAAK,OACLhB,KAAK,OACLiB,YAAY,qBAEd,SAAC,KAAD,CAAcjB,KAAK,OAAnB,SACG,SAAAkB,GAAG,OAAI,SAAC1B,EAAD,UAAW0B,QAErB,SAACjC,EAAD,CACE+B,KAAK,QACLhB,KAAK,QACLiB,YAAY,sBAEd,SAAC,KAAD,CAAcjB,KAAK,QAAnB,SACG,SAAAkB,GAAG,OAAI,SAAC1B,EAAD,UAAW0B,QAErB,SAACjC,EAAD,CACE+B,KAAK,WACLhB,KAAK,WACLiB,YAAY,cAEd,SAAC,KAAD,CAAcjB,KAAK,WAAnB,SACG,SAAAkB,GAAG,OAAI,SAAC1B,EAAD,UAAW0B,QAErB,SAACzC,EAAD","sources":["pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const RegBtn = styled('button')`\n  all: unset;\n  width: 100px;\n  height: 30px;\n  font-size: 16px;\n  background: transperent;\n  border: none;\n  position: relative;\n  color: #f0f0f0;\n  cursor: pointer;\n  z-index: 1;\n  padding: 10px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n\n:after,\n:before {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  z-index: -99999;\n  transition: all .4s;\n}\n\n:before {\n  transform: translate(0%, 0%);\n  width: 100%;\n  height: 100%;\n  background: #28282d;\n  border-radius: 10px;\n}\n\n:after {\n  transform: translate(10px, 10px);\n  width: 35px;\n  height: 35px;\n  background: #ffffff15;\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n  border-radius: 50px;\n}\n\n&:hover::before {\n  transform: translate(5%, 20%);\n  width: 110%;\n  height: 110%;\n}\n\n&:hover::after {\n  border-radius: 10px;\n  transform: translate(0, 0);\n  width: 100%;\n  height: 100%;\n}\n\n&:active::after {\n  transition: 0s;\n  transform: translate(0, 5%);\n}`\n\nexport const FormContainer = styled.div`\nmargin-top:40px;\nmargin-bottom: 40px;`\n\nexport const RegForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 330px;\n  height: 210px;\n  @media ${({ theme }) => theme.media.tablet} {\n    width: 470px;\n    height: 310px;\n  }\n  padding: 20px;\n  margin: 0 auto;\n  background-image: linear-gradient(to right top, #ffffff, #ececed, #d9d9db, #c7c7c9, #b4b5b8, #a3a4a7, #929396, #818285, #6d6e70, #5a5b5c, #484849, #363636);\n  border-radius:8px;\nbox-shadow: 20px -22px 21px -18px rgba(255,255,255,0.75);\n-webkit-box-shadow: 20px -22px 21px -18px rgba(255,255,255,0.75);\n-moz-box-shadow: 20px -22px 21px -18px rgba(255,255,255,0.75);\n`;\n\nexport const RegInput = styled(Field)`\n  position: relative;\n  width: 90%;\n  height: 35px;\n  font-size: 22px;\n  padding: ${({ theme }) => theme.space[2]}px;\n  margin-bottom: ${({ theme }) => theme.space[4]}px;\n  border-radius: ${({ theme }) => theme.radii.normal};\n  background: transparent;\n   background: transparent;\n  border:none;\n  border-bottom: 1px solid #757575;\n  &:hover,\n  &:focus {\n    outline: none;\n    width: 300px;\n    border:none;\n    border-bottom: 4px solid black;\n}\n\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.white};\n  }\n  &:hover,\n  &:focus {\n    width: 100%;\n  }\n`;\n\nexport const ErrorMsg = styled('div')`\n  color: ${({ theme }) => theme.colors.accent};\n  font-size: 12px;\n  margin-top: -${({ theme }) => theme.space[4]}px;\n  margin-bottom: ${({ theme }) => theme.space[4]}px;\n`;\n\nexport const Text = styled('h3')`\n  font-size: ${({ theme }) => theme.fontSizes.l}px;\n  text-align: center;\n`;\n","import { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport {\n  RegForm,\n  RegInput,\n  RegBtn,\n  ErrorMsg,\n  Text,\n  FormContainer\n} from './RegisterPage.styled';\n\nlet loginSchema = yup.object().shape({\n  name: yup.string().required('Name is required'),\n  email: yup.string().email(),\n  password: yup\n    .string('Enter your password')\n    .min(6, 'Password should be of minimum 6 characters length')\n    .required('Password is required'),\n});\n\nexport default function RegisterPage() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (value, { resetForm }) => {\n    console.log(value);\n    dispatch(authOperations.register(value));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      onSubmit={handleSubmit}\n      validationSchema={loginSchema}\n    >\n      <FormContainer>\n      <RegForm>\n        <div>\n          <Text>SignUp</Text>\n        </div>\n        <RegInput\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter your name\"\n        ></RegInput>\n        <ErrorMessage name=\"name\">\n          {msg => <ErrorMsg>{msg}</ErrorMsg>}\n        </ErrorMessage>\n        <RegInput\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter your email\"\n        ></RegInput>\n        <ErrorMessage name=\"email\">\n          {msg => <ErrorMsg>{msg}</ErrorMsg>}\n        </ErrorMessage>\n        <RegInput\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n        ></RegInput>\n        <ErrorMessage name=\"password\">\n          {msg => <ErrorMsg>{msg}</ErrorMsg>}\n        </ErrorMessage>\n        <RegBtn>SignUp</RegBtn>\n      </RegForm>\n      </FormContainer>\n    </Formik>\n  );\n}\n"],"names":["RegBtn","styled","FormContainer","RegForm","Form","theme","media","tablet","RegInput","Field","space","radii","normal","colors","white","ErrorMsg","accent","Text","fontSizes","l","loginSchema","yup","shape","name","required","email","password","min","RegisterPage","dispatch","useDispatch","initialValues","onSubmit","value","resetForm","console","log","authOperations","validationSchema","type","placeholder","msg"],"sourceRoot":""}